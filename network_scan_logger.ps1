<#
.SYNOPSIS
This script utilizes Nmap to scan ports of hosts specified in a text file.

.DESCRIPTION
This script performs a port scan on the hosts specified in a text file using Nmap.
You can specify the scan type and other parameters as per your requirements.

.PARAMETER HostFile
Specifies the path to the text file containing the hosts to be scanned.

.PARAMETER ScanType
Specifies the type of scan to be performed. You can use any of the following predefined scan types:
- [tcp-1000]: nmap -v -T4 -Pn -open -sS --script=default,vuln -A --host-timeout 10m 
- [tcp-full]: nmap -v -T4 -Pn -open -sS --script=default,vuln -A --host-timeout 10m -p-
- [udp-common]: nmap -v -T4 -Pn -sU -sV -A --host-timeout 10m -p '53,69,11,123,137,161,500,514,520,563'
- [udp-1000]: nmap -v -T4 -Pn -sU -sV -A --host-timeout 10m
- [udp-full]: nmap -v -T4 -Pn -sU -sV -A --host-timeout 10m -p-

.EXAMPLE
.\network_scan_logger.ps1 -HostFile .\hosts.txt -ScanType tcp-1000
This example executes a scan of the first 1000 TCP ports on the hosts listed in the hosts.txt file.

.NOTES
Author: Jennifer Torres (@xtormin)
Version: 1.0
#>

param (
    # Path to the file containing the list of hosts to scan
    [Parameter(Mandatory = $true)]
    [string]$HostFile,

    # Type of scan to perform
    [Parameter(Mandatory = $true)]
    [ValidateSet("tcp-1000", "tcp-full", "udp-common", "udp-1000", "udp-full")]
    [string]$ScanType
)

# Dictionary containing predefined scan types and their corresponding Nmap commands
$ScanCommands = @{ 
    "tcp-1000" = "nmap -v -T4 -Pn -open -sS --script=default,vuln -A --host-timeout 10m";
    "tcp-full" = "nmap -v -T4 -Pn -open -sS --script=default,vuln -A --host-timeout 10m -p-";
    "udp-common" = "nmap -v -T4 -Pn -sU -sV -A --host-timeout 10m -p '53,69,11,123,137,161,500,514,520,563'";
    "udp-1000" = "nmap -v -T4 -Pn -sU -sV -A --host-timeout 10m";
    "udp-full" = "nmap -v -T4 -Pn -sU -sV -A --host-timeout 10m -p-"
}


# Loop through each host in the provided file and perform the scan
foreach ($IP in Get-Content $HostFile) {
    # Create a folder for each host to save scan results
    $WorkFolder = "nmap\hosts"
    $HostFolder = "$WorkFolder\$IP"
    try {
        # Attempt to create the folder
        New-Item -Path $HostFolder -ItemType Directory -ErrorAction Stop | Out-Null
        Write-Host "|+| Folder created: $HostFolder"
    } catch {
        # If the folder already exists, inform the user
        Write-Host "|-| Folder not created. $HostFolder exists."
    }

    # Log information about the scan
    $ScanLogInfo = "[$(Get-Date)] | $HostFolder | $IP-$ScanType"
    $ScanInfoStart = $ScanLogInfo + " | started"
    $ScanInfoFinish = $ScanLogInfo + " | finished"

    # Construct the Nmap command based on the chosen ScanType
    $NmapScanCommand = $ScanCommands[$ScanType] + " -oA $HostFolder\$SCAN $IP"

    # Start the scan and log information to a file
    echo $ScanInfoStart
    Add-Content -Path "$WorkFolder\scan.logs" -Value $ScanInfoStart
    Invoke-Expression $NmapScanCommand
    echo $ScanInfoFinish
    Add-Content -Path "$WorkFolder\scan.logs" -Value $ScanInfoFinish
}

